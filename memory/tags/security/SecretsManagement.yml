tagName: SecretsManagement
description: "Secure handling of API keys, passwords, and sensitive configuration"
appliesTo:
  - "API key and credential management"
  - "Database connection strings"
  - "Third-party service credentials"
  - "Encryption keys and certificates"
  - "Configuration management"
patterns:
  - "Never hardcode secrets in source code"
  - "Use environment variables for configuration"
  - "Implement secret rotation mechanisms"
  - "Use dedicated secret management services"
  - "Encrypt secrets at rest and in transit"
bestPractices:
  - "Use HashiCorp Vault, AWS Secrets Manager, or Azure Key Vault"
  - "Implement least privilege access to secrets"
  - "Audit secret access and usage"
  - "Use short-lived credentials when possible"
  - "Implement automatic secret rotation"
  - "Never log or expose secrets in error messages"
  - "Use separate secrets for different environments"
secretStorage:
  - "Environment variables for simple deployments"
  - "Docker secrets for containerized applications"
  - "Kubernetes secrets with encryption at rest"
  - "Cloud provider secret management services"
  - "Hardware security modules (HSMs) for high security"
rotationStrategies:
  - "Automatic rotation with zero-downtime deployment"
  - "Versioned secrets with gradual rollout"
  - "Blue-green deployment for secret updates"
  - "Canary releases for secret validation"
  - "Rollback mechanisms for failed rotations"
accessControl:
  - "Role-based access control (RBAC) for secrets"
  - "Time-limited access tokens for secret retrieval"
  - "IP whitelisting for secret access"
  - "Multi-factor authentication for secret management"
  - "Audit trails for all secret operations"
developmentSecurity:
  - "Use .env files with .gitignore for local development"
  - "Provide example configuration files without real secrets"
  - "Use development-specific dummy secrets"
  - "Implement secret validation in CI/CD pipelines"
  - "Scan code repositories for accidentally committed secrets"
monitoringAndAlerting:
  - "Monitor secret access patterns for anomalies"
  - "Alert on failed secret retrieval attempts"
  - "Track secret age and rotation status"
  - "Monitor for secrets in logs or error messages"
  - "Implement secret usage analytics"
linkedTags:
  direct_links: ["EncryptionPatterns", "OAuth2JWTPatterns", "ZeroTrustArchitecture"]
  cross_category: ["DatabaseDesign", "TestingStrategy", "ErrorSurfaceReduction"]
  context_triggers: ["secrets", "credentials", "api_keys", "configuration", "key_management"]
  semantic_clusters: ["credential_security", "secret_storage", "access_control"]
usage_metadata:
  effectiveness_score: 0.0
  usage_count: 0
  last_applied: null
  success_contexts: []
  common_combinations: ["EncryptionPatterns+SecretsManagement", "OAuth2JWTPatterns+SecretsManagement", "ZeroTrustArchitecture+SecretsManagement"]
  activation_triggers: ["api_credentials", "database_passwords", "encryption_keys", "service_tokens", "environment_config"]
associative_strength:
  EncryptionPatterns: 0.95
  OAuth2JWTPatterns: 0.9
  ZeroTrustArchitecture: 0.85
  SecurityMonitoring: 0.8
  SecurityHeaders: 0.75
  DatabaseDesign: 0.8
  TestingStrategy: 0.7
  ErrorSurfaceReduction: 0.75
  DataPrivacyCompliance: 0.8
  AuthBypassPrevention: 0.85
pattern_combinations:
  secure_infrastructure:
    tokens: ["EncryptionPatterns", "ZeroTrustArchitecture", "SecurityMonitoring"]
    strength: 0.92
    context: "Secure infrastructure with secrets management"
  authentication_security:
    tokens: ["OAuth2JWTPatterns", "AuthBypassPrevention", "SecurityHeaders"]
    strength: 0.88
    context: "Complete authentication security framework"
  data_protection_suite:
    tokens: ["DataPrivacyCompliance", "DatabaseDesign", "EncryptionPatterns"]
    strength: 0.85
    context: "Comprehensive data protection with secrets"
tokenBudget: 90
